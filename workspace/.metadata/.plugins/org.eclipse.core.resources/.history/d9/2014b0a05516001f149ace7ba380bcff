package scoremanager.main;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import bean.School;
import bean.Subject;
import bean.Teacher;
import bean.TestListStudent;
import dao.ClassNumDao;
import dao.SubjectDao;
import dao.TestListSubjectDao;
import tool.Action;

public class TestListSubjectAction extends Action {
     public void execute(HttpServletRequest req, HttpServletResponse res) throws Exception {
         HttpSession session = req.getSession();//セッション
            Teacher teacher = (Teacher)session.getAttribute("user");//ログインユーザー
            School school = teacher.getSchool();
            String entYearStr ="";// 入力された入学年度
            String classNum = "";//入力されたクラス番号
            Subject subject = null;
            String subjectCd = "";
            int entYear = 0;// 入学年度
            List<TestListStudent> students = null;// 学生リスト
            LocalDate todaysDate = LocalDate.now();// LcalDateインスタンスを取得
            int year = todaysDate.getYear();// 現在の年を取得
            TestListSubjectDao tsDao = new TestListSubjectDao();//学生Dao
            SubjectDao subDao = new SubjectDao();
            ClassNumDao cNumDao = new ClassNumDao();// クラス番号Daoを初期化
            Map<String, String> errors = new HashMap<>();// エラーメッセージ

            //リクエストパラメータ―の取得 2
            entYearStr = req.getParameter("f1");
            classNum = req.getParameter("f2");
            subjectCd = req.getParameter("f3");
            System.out.println(entYearStr);
            System.out.println(classNum);
            System.out.println(subjectCd);

            subject = subDao.get(subjectCd, school);
            System.out.println(subject);

            //DBからデータ取得 3
            // ログインユーザーの学校コードをもとにクラス番号の一覧を取得
            List<String> list = cNumDao.filter(school);
            List<Subject> subjects = subDao.filter(school);
            // 入学年度が送信されていた場合
            if (entYearStr != null) {
                // 数値に変換
                entYear = Integer.parseInt(entYearStr);
            }

            //ビジネスロジック 4
            if (entYearStr != null) {
                // 数値に変換
                entYear = Integer.parseInt(entYearStr);
            }
            // リストを初期化
            List<Integer> entYearSet = new ArrayList<>();
            // 10年前から1年後まで年をリストに追加
            for (int i = year - 10; i < year + 1; i++) {
                entYearSet.add(i);
            }
         // リストを初期化
            List<Integer> NumSet = new ArrayList<>();
            //1回から2回までテストの回数をリストに追加
            for (int i = 1; i <= 2; i++){
                NumSet.add(i);
            }
            if (entYear != 0 && !classNum.equals("0") && subject != null){
            students = tsDao.filter(entYear, classNum, subject, school);

            //レスポンス値をセット 6
            // リクエストに入学年度をセット
            req.setAttribute("f1", entYear);
            // リクエストにクラス番号をセット
            req.setAttribute("f2", classNum);
            //リクエストに科目番号をセット
            req.setAttribute("f3", subject);
            // リクエストに学生リストをセット
            req.setAttribute("students", students);
            // リクエストにデータをセット
            req.setAttribute("ent_year_set", entYearSet);
            req.setAttribute("class_num_set", list);
            req.setAttribute("subjects",subjects );
            req.setAttribute("student_name_set", school.getName());
            req.setAttribute("test_num_set", NumSet);
            }else{
                errors.put("filter", "入学年度とクラスと科目を選択してください");
                req.setAttribute("errors", errors);

                req.setAttribute("students", students);
                // リクエストにデータをセット
                req.setAttribute("ent_year_set", entYearSet);
                req.setAttribute("class_num_set", list);
                req.setAttribute("subjects",subjects );
                req.setAttribute("student_name_set", school.getName());
                req.setAttribute("test_num_set", NumSet);

                req.getRequestDispatcher("test_list.jsp").forward(req, res);
            }
            //JSPへフォワード 7
            req.getRequestDispatcher("test_list_subject.jsp").forward(req, res);
            System.out.println("FINISHI");
         }
}