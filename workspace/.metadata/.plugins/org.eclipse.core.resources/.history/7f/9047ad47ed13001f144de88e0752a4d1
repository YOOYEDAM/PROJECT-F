package scoremanager.main;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import bean.Subject;
import bean.Teacher;
import bean.TestListSubject;
import dao.ClassNumDao;
import dao.SubjectDao;
import dao.TestListSubjectDao;
import tool.Action;

public class TestListSubjectAction extends Action {

	@Override
	public void execute(HttpServletRequest req, HttpServletResponse res) throws Exception {

		//ローカル変数の宣言 1
		HttpSession session = req.getSession();//セッション
		Teacher teacher = (Teacher)session.getAttribute("user");//ログインユーザー


		int entYear = 0;// 入学年度
		String entYearStr="";// 入力された入学年度
		String classNum = "";// 入力されたクラス番号
		String subjectName = "";// 入力された科目名
		String studentNum = "";// 表示される学生番号
		String studnetName = "";// 表示される学生名
		String No1 = "";// 表示される一回目の試験点数
		String No2 = "";// 表示される二回目の試験点数



		LocalDate todaysDate = LocalDate.now();// LcalDateインスタンスを取得
		int year = todaysDate.getYear();// 現在の年を取得

		List<String> classnum = null;// クラス番号リスト
		List<Subject> subjects = null;// クラス番号リスト
		List<TestListSubject> testlistsubjects = null;


		ClassNumDao cNumDao = new ClassNumDao();//Dao

		SubjectDao sbDao = new SubjectDao();//Dao
        subjects = sbDao.filter(teacher.getSchool());

        TestListSubjectDao tsbDao = new TestListSubjectDao();//Dao

     // ログインユーザーの学校コードをもとにクラス番号の一覧を取得
     		List<String> list = cNumDao.filter(teacher.getSchool());

//=============================================================================================================

		//ビジネスロジック 4
		if (entYearStr != null) {
			// 数値に変換
			entYear = Integer.parseInt(entYearStr);
		}
		// リストを初期化
		List<Integer> entYearSet = new ArrayList<>();
		// 10年前から1年後まで年をリストに追加
		for (int i = year - 10; i < year + 1; i++) {
			entYearSet.add(i);
		}



		//=============================================================================================================
		//DBからデータ取得 3
		// ログインユーザーの学校コードをもとにクラス番号の一覧を取得
		List<String> clist = cNumDao.filter(teacher.getSchool());
		List<Subject> sblist = sbDao.filter(teacher.getSchool());
		//List<TestListSubject> tsblist = tsbDao.filter(tsbDao.getSchool());

//=============================================================================================================

		//DBへデータ保存 5
		//なし
		//レスポンス値をセット 6
		// リクエストに入学年度をセット
		//req.setAttribute("f1", entYear);
		// リクエストにクラス番号をセット
		//req.setAttribute("f2", classNum);
		// リクエストにクラス番号をセット
		//req.setAttribute("f3", subjectName);
		// リクエストにクラス番号をセット
		//req.setAttribute("f4", studentNo);

//=============================================================================================================

		// リクエストにデータをセット
		req.setAttribute("subject_name_set", sblist);
		req.setAttribute("ent_year_set", entYearSet);
		req.setAttribute("class_num_set", clist);
		//req.setAttribute("student_num_set", studentNo);
		//req.setAttribute("student_name_set", studentName);
		//req.setAttribute("one_point_set", pointOne);
		//req.setAttribute("two_point_set", pointTwo);




		//JSPへフォワード 7
		req.getRequestDispatcher("test_list.jsp").forward(req, res);
	}
}
